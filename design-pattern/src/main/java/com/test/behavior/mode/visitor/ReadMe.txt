访问者模式是一种较为复杂的行为型设计模式，它包含访问者和被访问元素两个主要组成部分，这些被访问的元素通常具有不同的类型，
且不同的访问者可以对它们进行不同的访问操作。例如处方单中的各种药品信息就是被访问的元素，而划价人员和药房工作人员就是访问者。
访问者模式使得用户可以在不修改现有系统的情况下扩展系统的功能，为这些不同类型的元素增加新的操作。

在使用访问者模式时，被访问元素通常不是单独存在的，它们存储在一个集合中，这个集合被称为“对象结构”，访问者通过遍历对象结
构实现对其中存储的元素的逐个操作。


访问者模式是一种较为复杂的行为型设计模式，它包含访问者和被访问元素两个主要组成部
分，这些被访问的元素通常具有不同的类型，且不同的访问者可以对它们进行不同的访问操
作。例如处方单中的各种药品信息就是被访问的元素，而划价人员和药房工作人员就是访问
者。访问者模式使得用户可以在不修改现有系统的情况下扩展系统的功能，为这些不同类型
的元素增加新的操作。
在使用访问者模式时，被访问元素通常不是单独存在的，它们存储在一个集合中，这个集合
被称为“对象结构”，访问者通过遍历对象结构实现对其中存储的元素的逐个操作。

模式结构
抽象访问者(Visitor)： 定义了对每一个元素（Element）访问的行为，它的参数就是可以访问的元素，它的方法个数理论上来讲与
                    元素个数（Element的实现类个数）是一样的，从这点不难看出，访问者模式要求元素类的个数不能
                    改变（不能改变的意思是说，如果元素类的个数经常改变，则说明不适合使用访问者模式）。
具体访问者(ConcreteVisitor)： 给出对每一个元素类访问时所产生的具体行为。
抽象节点(Element)： 定义了一个接受访问者（accept）的方法，其意义是指，每一个元素都要可以被访问者访问。
具体节点(ConcreteElement)： 提供接受访问方法的具体实现，而这个具体的实现，通常情况下是使用访问者提供的访问该元素类的方法。
结构对象角色(ObjectStructure)： 定义当中所提到的对象结构，对象结构是一个抽象表述，具体点可以理解为一个具有容器性质或者复
                              合对象特性的类，它会含有一组元素（Element），并且可以迭代这些元素，供访问者访问。